<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IDS_ERROR_PAGE_NUMBER_MUST_GREATER_THAN_0" xml:space="preserve">
    <value>Page must be greater than 0.</value>
  </data>
  <data name="IDS_ERROR_PAGE_SIZE_MUST_GREATER_THAN_0" xml:space="preserve">
    <value>Page size must be greater than 0.</value>
  </data>
  <data name="IDS_ERROR_USERNAME_OR_PASSWORD_IS_INVALID" xml:space="preserve">
    <value>Username or password is invalid.</value>
  </data>
  <data name="IDS_ERROR_REFRESH_TOKEN_IS_INVALID" xml:space="preserve">
    <value>Refresh token is invalid.</value>
  </data>
  <data name="IDS_ERROR_REFRESH_TOKEN_EXPIRED" xml:space="preserve">
    <value>Refresh token is expired.</value>
  </data>
  <data name="IDS_ERROR_USER_LOCKOUT" xml:space="preserve">
    <value>The user was locked out.</value>
  </data>
  <data name="IDS_ERROR_USERNAME_UNAVAILABLE" xml:space="preserve">
    <value>UserName {0} not available.</value>
  </data>
  <data name="IDS_ERROR_USER_NOT_EXISTS" xml:space="preserve">
    <value>User not exists, [Id]:{0}.</value>
  </data>
  <data name="IDS_ERROR_REFRESH_TOKEN_REQUIRED" xml:space="preserve">
    <value>Refresh_token is required.</value>
  </data>
  <data name="IDS_DICTIONARY_ENVIRONMENT_DEV" xml:space="preserve">
    <value>Development</value>
  </data>
  <data name="IDS_DICTIONARY_ENVIRONMENT_PET" xml:space="preserve">
    <value>Performance Evaluation Testing</value>
  </data>
  <data name="IDS_DICTIONARY_ENVIRONMENT_PRD" xml:space="preserve">
    <value>Production</value>
  </data>
  <data name="IDS_DICTIONARY_ENVIRONMENT_SIM" xml:space="preserve">
    <value>Simulation Testing</value>
  </data>
  <data name="IDS_DICTIONARY_ENVIRONMENT_SIT" xml:space="preserve">
    <value>System Integration Testing</value>
  </data>
  <data name="IDS_DICTIONARY_ENVIRONMENT_UAT" xml:space="preserve">
    <value>User Acceptance Testing</value>
  </data>
  <data name="IDS_DICTIONARY_NAME_SA" xml:space="preserve">
    <value>Super administrator</value>
  </data>
  <data name="IDS_ERROR_APPINFO_CODE_UNAVAILABLE" xml:space="preserve">
    <value>App unique code is not available.</value>
  </data>
  <data name="IDS_ERROR_APPINFO_NOT_EXISTS" xml:space="preserve">
    <value>App not exists, [Id]:{0}.</value>
  </data>
  <data name="IDS_ERROR_APPINFO_STATUS_INVALID" xml:space="preserve">
    <value>Invalid app status.</value>
  </data>
  <data name="IDS_ENUM_APPINFO_STATUS_DISABLED" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="IDS_ENUM_APPINFO_STATUS_ENABLED" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="IDS_ERROR_APPINFO_CODE_REQUIRED" xml:space="preserve">
    <value>App unique code is required.</value>
  </data>
  <data name="IDS_ERROR_UNSUPPORTED_CACHE_PROVIDER" xml:space="preserve">
    <value>Unsupported cache provider '{0}'.</value>
  </data>
  <data name="IDS_ERROR_UNSUPPORTED_DATABASE_PROVIDER" xml:space="preserve">
    <value>Unsupported database provider '{0}'.</value>
  </data>
  <data name="IDS_ERROR_UNSUPPORTED_SERVICE_BUS_PROVIDER" xml:space="preserve">
    <value>Unsupported service bus provider '{0}'.</value>
  </data>
  <data name="IDS_ENUM_SETTING_NODE_STATUS_DISABLED" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="IDS_ENUM_SETTING_NODE_STATUS_PENDING" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="IDS_ENUM_SETTING_NODE_STATUS_PUBLISHED" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="IDS_ENUM_SETTING_NODE_TYPE_ARRAY" xml:space="preserve">
    <value>Array</value>
  </data>
  <data name="IDS_ENUM_SETTING_NODE_TYPE_BOOLEAN" xml:space="preserve">
    <value>Boolean</value>
  </data>
  <data name="IDS_ENUM_SETTING_NODE_TYPE_NUMBER" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="IDS_ENUM_SETTING_NODE_TYPE_OBJECT" xml:space="preserve">
    <value>Object</value>
  </data>
  <data name="IDS_ENUM_SETTING_NODE_TYPE_REFERER" xml:space="preserve">
    <value>Referer</value>
  </data>
  <data name="IDS_ENUM_SETTING_NODE_TYPE_ROOT" xml:space="preserve">
    <value>Root</value>
  </data>
  <data name="IDS_ENUM_SETTING_NODE_TYPE_STRING" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="IDS_ERROR_NOT_ALLOW_RENAME_ARRAY_CHILD_NODE" xml:space="preserve">
    <value>Not allow to rename array child node.</value>
  </data>
  <data name="IDS_ERROR_NOT_ALLOW_RENAME_ROOT_NODE" xml:space="preserve">
    <value>Not allow to rename root node.</value>
  </data>
  <data name="IDS_ERROR_SETTING_NODE_NAME_EXISTS" xml:space="preserve">
    <value>Child node name exists.</value>
  </data>
  <data name="IDS_ERROR_SETTING_NODE_NAME_REQUIRED" xml:space="preserve">
    <value>Node name is required.</value>
  </data>
  <data name="IDS_ERROR_SETTING_NODE_NOT_EXISTS" xml:space="preserve">
    <value>Setting node not exists, [Id]:{0}.</value>
  </data>
  <data name="IDS_ERROR_SETTING_NODE_VALUE_NOT_BOOLEAN" xml:space="preserve">
    <value>The node value is not valid boolean type.</value>
  </data>
  <data name="IDS_ERROR_SETTING_NODE_VALUE_NOT_NUMBER" xml:space="preserve">
    <value>The node value is not valid number type.</value>
  </data>
  <data name="IDS_ERROR_NOT_ALLOW_ADD_ROOT_IN_CHILD_NODE" xml:space="preserve">
    <value>Not allow to add Root type node in child node.</value>
  </data>
  <data name="IDS_ERROR_NO_PENDING_NODE" xml:space="preserve">
    <value>No pending node to publish.</value>
  </data>
  <data name="IDS_ERROR_ONLY_ALLOW_PUBLISH_ROOT_NODE" xml:space="preserve">
    <value>Only allow publish root node.</value>
  </data>
  <data name="IDS_ERROR_CANNOT_ADD_CHILD_NODE_IN_NODE_TYPE" xml:space="preserve">
    <value>Can not add child node in node of type '{0}'.</value>
  </data>
    <data name="IDS_ERROR_SETTING_NODE_NOT_ALLOW_SET_VALUE" xml:space="preserve">
        <value>Not allow to set value on node type of '{0}'.</value>
    </data>
</root>